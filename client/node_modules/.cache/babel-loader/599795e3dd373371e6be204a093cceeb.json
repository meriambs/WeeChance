{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOADING, LOGIN_USER, REGISTER_USER, LOGOUT_USER, GET_AUTH_USER, AUTH_ERRORS } from '../constants/ActionsTypes'; //Set the user loading\n\nconst userLoading = () => dispatch => {\n  dispatch({\n    type: USER_LOADING\n  });\n}; // Register USer\n\n\nexport const registerUser = formData => async dispatch => {\n  dispatch(userLoading());\n\n  try {\n    const res = await axios.post('/api/auth/register', formData);\n    dispatch({\n      type: REGISTER_USER,\n      payload: res.data // { msg: 'User registred with success', user, token }\n\n    });\n  } catch (error) {\n    console.dir(error);\n    const {\n      errors,\n      msg\n    } = error.response.data;\n\n    if (Array.isArray(errors)) {\n      errors.forEach(err => alert(err.msg));\n    }\n\n    console.log(errors);\n\n    if (msg) {\n      alert(msg);\n    }\n\n    dispatch({\n      type: AUTH_ERRORS\n    });\n  }\n}; // Login User\n\nexport const loginUser = formData => async dispatch => {\n  dispatch(userLoading());\n\n  try {\n    const res = await axios.post('/api/auth/login', formData);\n    dispatch({\n      type: LOGIN_USER,\n      payload: res.data // { msg: 'Logged in with success', user, token }\n\n    });\n  } catch (error) {\n    console.dir(error);\n    const {\n      errors,\n      msg\n    } = error.response.data;\n\n    if (Array.isArray(errors)) {\n      errors.forEach(err => alert(err.msg));\n    }\n\n    console.log(errors);\n\n    if (msg) {\n      alert(msg);\n    }\n\n    dispatch({\n      type: AUTH_ERRORS\n    });\n  }\n}; // Get auth user\n\nexport const getAuthUser = () => async dispatch => {\n  dispatch(userLoading());\n\n  try {\n    //headers\n    const config = {\n      headers: {\n        'x-auth-token': localStorage.getItem('token')\n      }\n    };\n    const res = await axios.get('/api/auth/user', config);\n    dispatch({\n      type: GET_AUTH_USER,\n      payload: res.data // {user: req.user}\n\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: AUTH_ERRORS\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT_USER\n  });\n};","map":{"version":3,"sources":["/home/meriam/testrestapi/APIREST-checkpoint/client/src/js/actions/authActions.js"],"names":["axios","USER_LOADING","LOGIN_USER","REGISTER_USER","LOGOUT_USER","GET_AUTH_USER","AUTH_ERRORS","userLoading","dispatch","type","registerUser","formData","res","post","payload","data","error","console","dir","errors","msg","response","Array","isArray","forEach","err","alert","log","loginUser","getAuthUser","config","headers","localStorage","getItem","get","logout"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n  USER_LOADING,\n  LOGIN_USER,\n  REGISTER_USER,\n  LOGOUT_USER,\n  GET_AUTH_USER,\n  AUTH_ERRORS,\n} from '../constants/ActionsTypes';\n\n//Set the user loading\nconst userLoading = () => (dispatch) => {\n  dispatch({\n    type: USER_LOADING,\n  });\n};\n\n// Register USer\nexport const registerUser = (formData) => async (dispatch) => {\n  dispatch(userLoading());\n  try {\n    const res = await axios.post('/api/auth/register', formData);\n    dispatch({\n      type: REGISTER_USER,\n      payload: res.data, // { msg: 'User registred with success', user, token }\n    });\n  } catch (error) {\n    console.dir(error);\n\n    const { errors, msg } = error.response.data;\n\n    if (Array.isArray(errors)) {\n      errors.forEach((err) => alert(err.msg));\n    }\n    console.log(errors);\n    if (msg) {\n      alert(msg);\n    }\n\n    dispatch({\n      type: AUTH_ERRORS,\n    });\n  }\n};\n\n// Login User\nexport const loginUser = (formData) => async (dispatch) => {\n  dispatch(userLoading());\n\n  try {\n    const res = await axios.post('/api/auth/login', formData);\n    dispatch({\n      type: LOGIN_USER,\n      payload: res.data, // { msg: 'Logged in with success', user, token }\n    });\n  } catch (error) {\n    console.dir(error);\n\n    const { errors, msg } = error.response.data;\n\n    if (Array.isArray(errors)) {\n      errors.forEach((err) => alert(err.msg));\n    }\n    console.log(errors);\n    if (msg) {\n      alert(msg);\n    }\n\n    dispatch({\n      type: AUTH_ERRORS,\n    });\n  }\n};\n\n// Get auth user\nexport const getAuthUser = () => async (dispatch) => {\n  dispatch(userLoading());\n\n  try {\n    //headers\n    const config = {\n      headers: {\n        'x-auth-token': localStorage.getItem('token'),\n      },\n    };\n    const res = await axios.get('/api/auth/user', config);\n    dispatch({\n      type: GET_AUTH_USER,\n      payload: res.data, // {user: req.user}\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: AUTH_ERRORS,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  dispatch({\n    type: LOGOUT_USER,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}