{"ast":null,"code":"var _jsxFileName = \"/home/meriam/testrestapi/APIREST-checkpoint/client/src/components/Profil.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import axios from 'axios'\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ProfileForm from './ProfileForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = makeStyles(theme => ({\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n    alignSelf: 'center',\n    margin: 'auto',\n    marginBottom: '0px',\n    width: '90px',\n    height: '90px'\n  },\n  icon: {\n    width: '90px',\n    height: '90px'\n  },\n  photo: {\n    display: 'flex'\n  },\n  title: {\n    fontFamily: 'Roboto',\n    fontStyle: 'normal',\n    fontWeight: '500',\n    fontSize: '16px',\n    lineHeight: '19px',\n    textAlign: 'center',\n    color: theme.palette.primary.main\n  },\n  label: {\n    paddingLeft: '8px'\n  },\n  input: {\n    paddingLeft: '8px'\n  }\n}));\n\nfunction Profile(props) {\n  _s();\n\n  const {\n    userId,\n    currentUser\n  } = props;\n  const [initialValues, setInitialValues] = useState(null);\n  const [isDataFetched, setIsDataFetched] = useState(false);\n  const [imgSrc, setImgSrc] = useState(null); //   useEffect(() => {\n  //     const fetchData= async () => {\n  //       const res = await axios.get(`${process.env.REACT_APP_URL}profile/${userId}`)\n  //       const { firstName, lastName } = res.data.user;\n  //       const {\n  //         headline,\n  //         city,\n  //         country,\n  //         currentPosition,\n  //         province,\n  //         summary\n  //       } = res.data;\n  //       let imgSrc;\n  //       if(res.data.photo) {\n  //         setImgSrc(`${process.env.REACT_APP_URL}${res.data.photo._id}${res.data.photo.name}`)\n  //       }\n  //         setInitialValues({\n  //           firstName,\n  //           lastName,\n  //           headline,\n  //           city,\n  //           country,\n  //           currentPosition,\n  //           province,\n  //           summary,\n  //         })\n  //         setIsDataFetched(true)\n  //     }\n  //     if(!isDataFetched && userId) {\n  //       fetchData()\n  //     }\n  //   } ,\n  //   [userId]\n  //   )\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isDataFetched && /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 0,\n        sm: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(ProfileForm, {\n          initialValues: initialValues,\n          userId: userId,\n          currentUser: currentUser,\n          imgSrc: imgSrc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 0,\n        sm: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 4\n  }, this);\n}\n\n_s(Profile, \"IQ+3reoWJifKyOWojoFocSqAziQ=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/meriam/testrestapi/APIREST-checkpoint/client/src/components/Profil.js"],"names":["React","useState","makeStyles","Grid","ProfileForm","styles","theme","avatar","backgroundColor","palette","secondary","main","alignSelf","margin","marginBottom","width","height","icon","photo","display","title","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","textAlign","color","primary","label","paddingLeft","input","Profile","props","userId","currentUser","initialValues","setInitialValues","isDataFetched","setIsDataFetched","imgSrc","setImgSrc"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n// import axios from 'axios'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ProfileForm from './ProfileForm';\n\nconst styles = makeStyles((theme) => ({\n    avatar: {\n      backgroundColor: theme.palette.secondary.main,\n      alignSelf: 'center',\n      margin: 'auto',\n      marginBottom: '0px',\n      width:'90px',\n      height:'90px',\n    },\n    icon: {\n      width:'90px',\n      height:'90px',\n    },\n    photo: {\n      display: 'flex',\n    },\n    title: {\n        fontFamily: 'Roboto',\n        fontStyle: 'normal',\n        fontWeight: '500',\n        fontSize: '16px',\n        lineHeight: '19px',\n        textAlign: 'center',\n        color: theme.palette.primary.main,\n    },\n    label: {\n      paddingLeft: '8px'\n    },\n    input: {\n      paddingLeft: '8px'\n    }\n  }));\n  \nfunction Profile(props) {\n  const { userId, currentUser } = props;\n  const [initialValues, setInitialValues] = useState(null);\n  const [isDataFetched, setIsDataFetched] = useState(false);\n  const [imgSrc, setImgSrc] = useState(null);\n//   useEffect(() => {\n//     const fetchData= async () => {\n//       const res = await axios.get(`${process.env.REACT_APP_URL}profile/${userId}`)\n//       const { firstName, lastName } = res.data.user;\n//       const {\n//         headline,\n//         city,\n//         country,\n//         currentPosition,\n//         province,\n//         summary\n//       } = res.data;\n//       let imgSrc;\n//       if(res.data.photo) {\n//         setImgSrc(`${process.env.REACT_APP_URL}${res.data.photo._id}${res.data.photo.name}`)\n//       }\n//         setInitialValues({\n//           firstName,\n//           lastName,\n//           headline,\n//           city,\n//           country,\n//           currentPosition,\n//           province,\n//           summary,\n//         })\n//         setIsDataFetched(true)\n//     }\n//     if(!isDataFetched && userId) {\n//       fetchData()\n//     }\n//   } ,\n//   [userId]\n//   )\n  return (\n   <div>\n     {isDataFetched &&\n     <Grid container>\n       <Grid item xs={0} sm={3} />\n       <Grid item xs={12} sm={6}>\n      <ProfileForm\n      initialValues={initialValues} \n      userId={userId}\n      currentUser={currentUser}\n      imgSrc={imgSrc}\n     />\n     </Grid>\n     <Grid item xs={0} sm={3} />\n     </Grid>\n         }\n     </div>\n  );\n}\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}